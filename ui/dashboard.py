import streamlit as st
import pandas as pd
import glob
import os

# Th√™m ƒë∆∞·ªùng d·∫´n g·ªëc c·ªßa d·ª± √°n v√†o sys.path
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.insert(0, project_root)

from config import settings

st.set_page_config(page_title="Dashboard ƒê√°nh gi√° RAG", layout="wide")

st.title("üìä Dashboard Tr·ª±c quan h√≥a K·∫øt qu·∫£ ƒê√°nh gi√°")
st.write("N∆°i ƒë√¢y hi·ªÉn th·ªã v√† so s√°nh hi·ªáu su·∫•t c·ªßa c√°c pipeline RAG kh√°c nhau.")

# --- T·∫£i d·ªØ li·ªáu k·∫øt qu·∫£ --- #
results_path = str(settings.EVAL_RESULTS_DIR)
csv_files = glob.glob(os.path.join(results_path, "*.csv"))

if not csv_files:
    st.warning("Kh√¥ng t√¨m th·∫•y file k·∫øt qu·∫£ n√†o trong th∆∞ m·ª•c `evaluation/results`.")
    st.info("Vui l√≤ng ch·∫°y quy tr√¨nh ƒë√°nh gi√° tr∆∞·ªõc b·∫±ng l·ªánh: `python -m evaluation.main_evaluation`")
else:
    all_results = []
    for f in csv_files:
        try:
            df = pd.read_csv(f)
            # L·∫•y t√™n ph∆∞∆°ng ph√°p t·ª´ t√™n file
            method_name = os.path.basename(f).replace("evaluation_results_", "").replace(".csv", "")
            df['method'] = method_name
            all_results.append(df)
        except Exception as e:
            st.error(f"L·ªói khi ƒë·ªçc file {f}: {e}")

    if all_results:
        # Gh√©p t·∫•t c·∫£ k·∫øt qu·∫£ l·∫°i
        full_df = pd.concat(all_results, ignore_index=True)

        st.subheader("So s√°nh Hi·ªáu su·∫•t Trung b√¨nh")
        
        # T√≠nh to√°n c√°c ch·ªâ s·ªë trung b√¨nh
        avg_scores = full_df.groupby('method').mean(numeric_only=True)
        st.dataframe(avg_scores.style.format("{:.3f}").background_gradient(cmap='viridis'))

        st.subheader("Ph√¢n ph·ªëi c·ªßa c√°c Ch·ªâ s·ªë")
        
        # Ch·ªçn ch·ªâ s·ªë ƒë·ªÉ xem
        metric_to_plot = st.selectbox("Ch·ªçn m·ªôt ch·ªâ s·ªë ƒë·ªÉ tr·ª±c quan h√≥a:", avg_scores.columns)

        if metric_to_plot:
            st.bar_chart(full_df, x='method', y=metric_to_plot)

        st.subheader("Chi ti·∫øt K·∫øt qu·∫£")
        st.dataframe(full_df)
